name: Publish Release

on:
  workflow_run:
    workflows: ["Version Auto-increment"]
    types:
      - completed
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55  # v5.5.0
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        make install
        make dev-setup

    - name: Display version information
      run: |
        # Check if make is available
        if ! command -v make &> /dev/null
        then
            echo "Make could not be found, installing..."
            sudo apt-get update
            sudo apt-get install make
        fi
        echo "Getting version information using Makefile..."
        make get-version

    - name: Get version
      id: get_version
      run: |
        # Extract version directly from __init__.py (same as Makefile does)
        VERSION=$(cat src/yaraflux_mcp_server/__init__.py | grep __version__ | sed -e "s/__version__ = \"\(.*\)\"/\1/")
        echo "Detected version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Build package
      run: make build

    - name: Build Docker images
      run: |
        # Build all stages
        make docker-build

    - name: Generate release notes
      id: release_notes
      run: |
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          # If no previous tag, get all commits
          git log --pretty=format:"- %s" > RELEASE_NOTES.md
        else
          git log --pretty=format:"- %s" $LAST_TAG..HEAD > RELEASE_NOTES.md
        fi
        
        # Add header
        echo "# Release v${{ steps.get_version.outputs.version }}" | cat - RELEASE_NOTES.md > temp && mv temp RELEASE_NOTES.md
        
        # Add Docker image information
        echo -e "\n## Docker Images\n" >> RELEASE_NOTES.md
        echo "- \`threatflux/yaraflux-mcp-server:${{ steps.get_version.outputs.version }}\` (production)" >> RELEASE_NOTES.md

    - name: Create GitHub Release
      uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631  # v2.2.2
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        files: |
          dist/*.tar.gz
          dist/*.whl
          RELEASE_NOTES.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
      with:
        name: release-artifacts-v${{ steps.get_version.outputs.version }}
        path: |
          dist/*.tar.gz
          dist/*.whl
          RELEASE_NOTES.md
        retention-days: 30
        if-no-files-found: error
        compression-level: 9

    - name: Login to Docker Hub
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772  # v3.4.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker images
      run: |
        # Push versioned images
        docker push threatflux/yaraflux-mcp-server:${{ steps.get_version.outputs.version }}
        
        # Push latest tag
        docker push threatflux/yaraflux-mcp-server:latest

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  # v7.0.1
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Release workflow failed for v${{ steps.get_version.outputs.version }}',
            body: 'The release workflow failed. Please check the workflow logs for details.'
          })